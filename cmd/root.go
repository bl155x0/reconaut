package cmd

import (
	"os"

	"github.com/spf13/cobra"
)

var (
	listMode bool
)

// rootCmd represents the base command when called without any subcommands
var rootCmd = &cobra.Command{
	Use: "reconaut -t <template-action> VARIABLE=VALUE [VARIABLE=VALUE...]",
	Short: `
 ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà  ‚ñÑ‚ñÑ‚ñÑ      ‚ñà    ‚ñà‚ñà ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì üíÄ
‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí ‚ñì‚ñà   ‚ñÄ ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí 
‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí ‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñì‚ñà    ‚ñÑ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ ‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë
‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ   ‚ñí‚ñì‚ñà  ‚ñÑ‚ñí‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë 
‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñë‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì   ‚ñí‚ñà‚ñà‚ñí ‚ñë 
‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñë‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí   ‚ñí ‚ñë‚ñë   
  ‚ñë‚ñí ‚ñë ‚ñí‚ñë‚ñë ‚ñë ‚ñë     ‚ñë  ‚ñí    ‚ñë ‚ñí ‚ñí‚ñë ‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë‚ñë ‚ñë   ‚ñí‚ñí ‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë     ‚ñë    
   ‚ñë   ‚ñë     ‚ñë   ‚ñë       ‚ñë ‚ñë ‚ñë ‚ñí     ‚ñë   ‚ñë ‚ñë   ‚ñë   ‚ñí   ‚ñë‚ñë‚ñë ‚ñë ‚ñë   ‚ñë      
   ‚ñë     ‚ñë   ‚ñë   ‚ñë ‚ñë         ‚ñë ‚ñë           ‚ñë       ‚ñë     ‚ñë              

    	       basic reconnaissance job processor
	                    ‚òÖ bl155 ‚òÖ
`,
	PreRun: func(cmd *cobra.Command, _ []string) {
		if listMode == false {
			cmd.MarkFlagRequired("template")
		}
	},
	Run: func(cmd *cobra.Command, args []string) {
		template, err := cmd.Flags().GetString("template")
		cobra.CheckErr(err)

		projectFile, err := cmd.Flags().GetString("project-name")
		cobra.CheckErr(err)

		verbose, err := cmd.Flags().GetBool("verbose")
		cobra.CheckErr(err)

		list, err := cmd.Flags().GetBool("list")
		cobra.CheckErr(err)

		if list {
			//list only the available templates
			listTemplates()
		} else {
			//start the recon
			err = start(projectFile, template, verbose, args)
			cobra.CheckErr(err)
		}
	},
}

// Execute adds all child commands to the root command and sets flags appropriately.
// This is called by main.main(). It only needs to happen once to the rootCmd.
func Execute() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	rootCmd.Flags().StringP("project-name", "p", "", "The project base name (database, etc.)")
	rootCmd.Flags().StringP("template", "t", "", "The action to to execute (the template to run) (mandatory)")
	rootCmd.Flags().BoolVarP(&listMode, "list", "l", false, "Lists the available templates")
	rootCmd.Flags().BoolP("verbose", "v", false, "Be more verbose in the output")
}
